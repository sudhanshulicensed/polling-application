{"ast":null,"code":"import _regeneratorRuntime from \"/home/etech/Desktop/vue_assignment/poll application/poll-application/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/etech/Desktop/vue_assignment/poll application/poll-application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/home/etech/Desktop/vue_assignment/poll application/poll-application/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: \"EditPoll\",\n  data: function data() {\n    return {\n      selected: \"\",\n      showDeletePollModal: false,\n      showAddOptionModal: false,\n      showEditTitleModal: false,\n      editPollTitle: {},\n      deletePollOption: {},\n      text: \"\",\n      deletePollOptionText: \"\",\n      editTitleText: \"\",\n      objForNewOption: {}\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"editPollList\"])),\n  mounted: function mounted() {\n    this.callMountRes();\n    this.callAddOptionRes();\n    this.callEditTitleRes();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['callDeletePoll', \"callEditTitle\", 'callEditpoll', 'callAddOption', 'callDeleteOption'])), {}, {\n    callMountRes: function callMountRes() {\n      this.callEditpoll();\n    },\n    callAddOptionRes: function callAddOptionRes() {\n      this.callEditpoll();\n    },\n    callEditTitleRes: function callEditTitleRes() {\n      this.callEditpoll();\n    },\n    // callDeleteOPtionRes(){\n    //   this.callDeleteOption();\n    // },\n    selectedOption: function selectedOption(event) {\n      console.log(event, event.target.value, \"blah\");\n    },\n    selectedRadio: function selectedRadio(item) {\n      this.deletePollOptionText = item;\n    },\n    handleDeletePoll: function handleDeletePoll(item) {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var payLoad, responseDelete;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                payLoad = {\n                  id: item._id\n                };\n                _context.next = 3;\n                return _this.callDeletePoll(payLoad.id);\n\n              case 3:\n                responseDelete = _context.sent;\n\n                _this.callMountRes();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    handleUpdateTitle: function handleUpdateTitle(item) {\n      this.editPollTitle = item;\n      this.editPollTitleOk = item;\n      this.showEditTitleModal = true;\n    },\n    handleEditTitleOk: function handleEditTitleOk(editTitleText) {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var payLoad, responseEditTitle;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                payLoad = {\n                  title: editTitleText,\n                  id: _this2.editPollTitle._id\n                };\n                _context2.next = 3;\n                return _this2.callEditTitle(payLoad);\n\n              case 3:\n                responseEditTitle = _context2.sent;\n\n                _this2.callMountRes();\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    deleteOption: function deleteOption(item) {\n      this.deletePollOption = item;\n      console.log(this.deletePollOption);\n      this.showDeletePollModal = true;\n    },\n    handleDeleteOptionOk: function handleDeleteOptionOk() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var payLoad, responsedelPollOptText;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                payLoad = {\n                  id: _this3.deletePollOption._id,\n                  text: _this3.deletePollOptionText\n                };\n                console.log(payLoad);\n                _context3.next = 4;\n                return _this3.callDeleteOption(payLoad);\n\n              case 4:\n                responsedelPollOptText = _context3.sent;\n\n                _this3.callMountRes();\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    handleNewOption: function handleNewOption(item) {\n      this.objForNewOption = item;\n      this.showAddOptionModal = true;\n    },\n    handleOk: function handleOk(text, editPollList) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var payLoad, responseAddOption;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(_this4.text != \"\")) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                payLoad = {\n                  id: _this4.objForNewOption._id,\n                  text: _this4.text\n                };\n                _context4.next = 4;\n                return _this4.callAddOption(payLoad);\n\n              case 4:\n                responseAddOption = _context4.sent;\n\n                _this4.callAddOptionRes();\n\n                _this4.text = \"\";\n                _context4.next = 10;\n                break;\n\n              case 9:\n                console.log(\"oop\");\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AAEA;EACAA,gBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,YADA;MAEAC,0BAFA;MAGAC,yBAHA;MAIAC,yBAJA;MAKAC,iBALA;MAMAC,oBANA;MAOAC,QAPA;MAQAC,wBARA;MASAC,iBATA;MAUAC;IAVA;EAYA,CAfA;EAgBAC,4BACAC,YACA,cADA,EADA,CAhBA;EAqBAC,OArBA,qBAqBA;IACA;IACA;IACA;EACA,CAzBA;EA0BAC,yCACAC,YACA,gBADA,EAEA,eAFA,EAGA,cAHA,EAIA,eAJA,EAKA,kBALA,EADA;IAQAC,YARA,0BAQA;MACA;IACA,CAVA;IAWAC,gBAXA,8BAWA;MACA;IACA,CAbA;IAcAC,gBAdA,8BAcA;MACA;IACA,CAhBA;IAiBA;IACA;IACA;IACAC,cApBA,0BAoBAC,KApBA,EAoBA;MACAC;IACA,CAtBA;IAuBAC,aAvBA,yBAuBAC,IAvBA,EAuBA;MACA;IACA,CAzBA;IA0BAC,gBA1BA,4BA0BAD,IA1BA,EA0BA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAE,OADA,GACA;kBACAC;gBADA,CADA;gBAAA;gBAAA,OAIA,gCAJA;;cAAA;gBAIAC,cAJA;;gBAKA;;cALA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA,CAhCA;IAiCAC,iBAjCA,6BAiCAL,IAjCA,EAiCA;MACA;MACA;MACA;IACA,CArCA;IAsCAM,iBAtCA,6BAsCApB,aAtCA,EAsCA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAgB,OADA,GACA;kBACAK,oBADA;kBAEAJ;gBAFA,CADA;gBAAA;gBAAA,OAKA,6BALA;;cAAA;gBAKAK,iBALA;;gBAMA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA,CA7CA;IA8CAC,YA9CA,wBA8CAT,IA9CA,EA8CA;MACA;MACAF;MACA;IACA,CAlDA;IAmDAY,oBAnDA,kCAmDA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACAR,OADA,GACA;kBACAC,+BADA;kBAEAnB;gBAFA,CADA;gBAKAc;gBALA;gBAAA,OAMA,gCANA;;cAAA;gBAMAa,sBANA;;gBAOA;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CA3DA;IA4DAC,eA5DA,2BA4DAZ,IA5DA,EA4DA;MACA;MACA;IACA,CA/DA;IAgEAa,QAhEA,oBAgEA7B,IAhEA,EAgEA8B,YAhEA,EAgEA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,MACA,iBADA;kBAAA;kBAAA;gBAAA;;gBAEAZ,OAFA,GAEA;kBACAC,8BADA;kBAEAnB;gBAFA,CAFA;gBAAA;gBAAA,OAMA,6BANA;;cAAA;gBAMA+B,iBANA;;gBAOA;;gBACA;gBARA;gBAAA;;cAAA;gBAUAjB;;cAVA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAYA;EA5EA;AA1BA","names":["name","data","selected","showDeletePollModal","showAddOptionModal","showEditTitleModal","editPollTitle","deletePollOption","text","deletePollOptionText","editTitleText","objForNewOption","computed","mapGetters","mounted","methods","mapActions","callMountRes","callAddOptionRes","callEditTitleRes","selectedOption","event","console","selectedRadio","item","handleDeletePoll","payLoad","id","responseDelete","handleUpdateTitle","handleEditTitleOk","title","responseEditTitle","deleteOption","handleDeleteOptionOk","responsedelPollOptText","handleNewOption","handleOk","editPollList","responseAddOption"],"sourceRoot":"src/components","sources":["EditPoll.vue"],"sourcesContent":["<template>\n  <div class=\"editPoll\">\n    <b-modal\n      @ok=\"handleDeleteOptionOk\"\n      v-model=\"showDeletePollModal\"\n      title=\"Select option to remove from poll\"\n    >\n      <p>Title: {{ deletePollOption.title }} </p>\n      <li\n        id=\"no-style\"\n        v-for=\"(item, index) in deletePollOption.options\"\n        :key=\"index\"\n      >\n        <b-form-radio name=\"some-radios\" @change=\"selectedRadio(item.option)\" v-model=\"selected\" :value=\"item.option\">{{\n          item.option\n        }}</b-form-radio>\n      </li>\n    </b-modal>\n    <b-modal @ok=\"handleEditTitleOk(editTitleText, editPollList)\" v-model=\"showEditTitleModal\">\n      <p>{{ editPollTitle.title }}</p>\n      <input type=\"text\" v-model=\"editTitleText\">\n      {{ editTitleText }}\n      <!-- Another Option -->\n      <!-- <p>{{ editPollTitle ? editPollTitle.title : null}}</p> -->\n    </b-modal>\n    <b-modal\n      @ok=\"handleOk(text, editPollList)\"\n      v-model=\"showAddOptionModal\"\n      title=\"Type what you want to add as an option in Poll\"\n    >\n      <p class=\"my-4\">Option:</p>\n      <b-form-input v-model=\"text\" placeholder=\"Option for Poll\"></b-form-input>\n      {{ text }}\n    </b-modal>\n    <b-jumbotron header=\"Edit Poll\"></b-jumbotron>\n    <b-card class=\"card\">\n      <b-container class=\"container\">\n        <div\n          class=\"pollHolder\"\n          v-for=\"(item, index) in editPollList\"\n          :key=\"index\"\n        >\n          <div class=\"pollDetail\">\n            <p class=\"title\">Title: {{ item.title }}</p>\n            <p class=\"options\">Options in Poll</p>\n            <ol>\n              <li v-for=\"(item1, index) in item.options\" :key=\"index\">\n                {{ item1.option }}\n              </li>\n            </ol>\n          </div>\n          <div class=\"editPollButtons\">\n            <b-button variant=\"outline-primary\" @click=\"handleUpdateTitle(item)\"\n              >Edit Title</b-button\n            >\n            <b-button\n              variant=\"outline-primary\"\n              @click=\"handleNewOption(item)\"\n              v-b-modal.modal-1\n              >New Option\n            </b-button>\n\n            <b-button variant=\"outline-danger\" @click=\"deleteOption(item)\"\n              >Delete Option\n            </b-button>\n            <b-button\n              variant=\"outline-danger\"\n              @click=\"handleDeletePoll(item)\"\n              >Delete Poll</b-button\n            >\n          </div>\n        </div>\n      </b-container>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: \"EditPoll\",\n  data() {\n    return {\n      selected: \"\",\n      showDeletePollModal: false,\n      showAddOptionModal: false,\n      showEditTitleModal: false,\n      editPollTitle: {},\n      deletePollOption: {},\n      text: \"\",\n      deletePollOptionText: \"\",\n      editTitleText: \"\",\n      objForNewOption: {},\n    };\n  },\n  computed: {\n    ...mapGetters([\n        \"editPollList\",\n    ]),\n  },\n  mounted(){\n    this.callMountRes();\n    this.callAddOptionRes();\n    this.callEditTitleRes();\n  },\n  methods: {\n    ...mapActions([\n            'callDeletePoll',\n            \"callEditTitle\",\n            'callEditpoll',\n            'callAddOption',\n            'callDeleteOption',\n        ]),\n    callMountRes(){\n        this.callEditpoll();\n    },\n    callAddOptionRes(){\n        this.callEditpoll();\n    },\n    callEditTitleRes(){\n      this.callEditpoll();\n    },\n    // callDeleteOPtionRes(){\n    //   this.callDeleteOption();\n    // },\n    selectedOption(event){\n      console.log(event, event.target.value, \"blah\");\n    },\n    selectedRadio(item){\n      this.deletePollOptionText = item;\n    },\n    async handleDeletePoll(item){\n        const payLoad = {\n            id: item._id,\n        }\n        const responseDelete = await this.callDeletePoll(payLoad.id);\n        this.callMountRes();\n    },\n    handleUpdateTitle(item){\n        this.editPollTitle = item;\n        this.editPollTitleOk = item;\n        this.showEditTitleModal = true;\n    },\n    async handleEditTitleOk(editTitleText) {\n        const payLoad = {\n          title: editTitleText,\n          id: this.editPollTitle._id,\n        }\n        const responseEditTitle = await this.callEditTitle(payLoad);\n        this.callMountRes();\n    },\n    deleteOption(item) {\n      this.deletePollOption = item;\n      console.log(this.deletePollOption)\n      this.showDeletePollModal = true;\n    },\n    async handleDeleteOptionOk() {\n      const payLoad = {\n        id : this.deletePollOption._id,\n        text : this.deletePollOptionText,\n      }\n      console.log(payLoad)\n      const responsedelPollOptText = await this.callDeleteOption(payLoad);\n      this.callMountRes();\n    },\n    handleNewOption(item) {\n        this.objForNewOption = item;\n        this.showAddOptionModal = true;\n    },\n    async handleOk(text, editPollList){\n        if(this.text != \"\") {\n            const payLoad = {\n                id: this.objForNewOption._id,\n                text: this.text,\n            }\n            const responseAddOption = await this.callAddOption(payLoad);\n            this.callAddOptionRes();\n            this.text = \"\";\n        } else {\n            console.log(\"oop\");\n        }\n    }\n  },\n};\n</script>\n\n<style scoped>\n.pollDetail {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n}\n\n.editPollButtons {\n  display: flex;\n  justify-content: end;\n  column-gap: 10px;\n}\n\nli {\n  text-align: start;\n}\n\n.pollHolder {\n  border: 1px solid black;\n  box-sizing: border-box;\n  box-shadow: 5px 5px 2px rgba(129, 236, 236, 0.4);\n  margin-bottom: 35px;\n  padding: 10px;\n}\n\n.container {\n  box-sizing: border-box !important;\n}\n\n.card {\n  width: 100%;\n  box-sizing: border-box;\n  padding-top: 5px;\n  display: flex;\n  align-items: center;\n}\n\n#no-style {\n  list-style-type: none;\n}\n</style>"]},"metadata":{},"sourceType":"module"}