{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nexport default {\n  name: \"CreatePoll\",\n\n  data() {\n    return {\n      title: \"\",\n      option: \"\",\n      vote: 0,\n      checkForDelete: true,\n      options: [{\n        option: \"Akjh\",\n        vote: 1\n      }]\n    };\n  },\n\n  methods: { ...mapActions(['callCreatepoll']),\n\n    handleCreatePoll() {\n      const payLoad = {\n        title: this.title,\n        options: this.options\n      };\n      console.log(payLoad);\n      this.callCreatepoll(payLoad);\n    },\n\n    addOption() {\n      if (this.optionText != \"\") {\n        this.options.push({\n          option: this.option,\n          vote: this.vote\n        });\n      }\n    },\n\n    deleteOption(index) {\n      this.options.splice(index, 1);\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;EACAA,kBADA;;EAEAC;IACA;MACAC,SADA;MAEAC,UAFA;MAGAC,OAHA;MAIAC,oBAJA;MAKAC;QACAH,cADA;QAEAC;MAFA;IALA;EAWA,CAdA;;EAeAG,WACA,eACA,gBADA,EADA;;IAIAC;MACA;QACAN,iBADA;QAEAI;MAFA;MAIAG;MACA;IACA,CAXA;;IAYAC;MACA;QACA;UAAAP;UAAAC;QAAA;MACA;IACA,CAhBA;;IAiBAO;MACA;IACA;;EAnBA;AAfA","names":["name","data","title","option","vote","checkForDelete","options","methods","handleCreatePoll","console","addOption","deleteOption"],"sourceRoot":"src/components","sources":["CreatePoll.vue"],"sourcesContent":["<template>\n    <div class=\"createPoll\">\n        <b-jumbotron header=\"Create Poll\"></b-jumbotron>\n        <b-container fluid>\n            <b-row sm=\"12\">\n                <b-col sm=\"8\">\n                    <b-row class=\"row-gap\" >\n                        <b-col sm=\"3\">\n                            <label><code>Question</code>:</label>\n                        </b-col>\n                        <b-col sm=\"9\">\n                            <b-form-input v-model=\"title\">{{ title }}</b-form-input>\n                        </b-col>\n                    </b-row>\n                    <b-row class=\"row-gap\" v-for=\"(item, index) in options\" :key=\"index\">\n                        <b-col sm=\"3\">\n                            <label><code>Option{{(index +1)}}</code>:</label>\n                        </b-col>\n                        <b-col sm=\"8\" >\n                            <b-form-input v-model=\"item.option\"></b-form-input>\n                        </b-col>\n                        <b-col sm=\"1\">\n                            <b-button variant=\"danger\" v-if=\"options.length > 3\" @click=\"deleteOption(index)\">Delete</b-button>\n                        </b-col>\n                    </b-row>\n                </b-col>\n            </b-row>\n            <b-row>\n                <b-col>\n                    <b-row>\n                        <b-button variant=\"info\" @click=\"handleCreatePoll()\">Submit</b-button>\n                        <b-button variant=\"info\" @click=\"addOption\">Add Option</b-button>\n                    </b-row>\n                </b-col>\n            </b-row>\n        </b-container>\n    </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex';\nexport default {\n    name: \"CreatePoll\",\n    data() {\n        return {\n            title: \"\",\n            option: \"\",\n            vote: 0,\n            checkForDelete: true,\n            options: [{\n                option: \"Akjh\",\n                vote: 1,\n            }],\n\n        }\n    },\n    methods: {\n        ...mapActions([\n            'callCreatepoll',\n        ]),\n        handleCreatePoll(){\n            const payLoad = {\n                title: this.title,\n                options: this.options,\n            }\n            console.log(payLoad)\n            this.callCreatepoll(payLoad);\n        },\n        addOption(){\n            if(this.optionText != \"\") {\n                this.options.push({option: this.option, vote: this.vote});\n            }\n        },\n        deleteOption(index){\n            this.options.splice(index, 1);\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .row-gap{\n        margin-bottom: 10px;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}