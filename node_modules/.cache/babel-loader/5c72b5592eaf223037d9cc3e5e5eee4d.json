{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from 'vuex';\nexport default {\n  name: \"EditPoll\",\n\n  data() {\n    return {\n      selected: \"\",\n      showDeletePollModal: false,\n      showAddOptionModal: false,\n      showEditTitleModal: false,\n      editPollTitle: {},\n      deletePollOption: {},\n      text: \"\",\n      deletePollOptionText: \"\",\n      editTitleText: \"\",\n      objForNewOption: {}\n    };\n  },\n\n  computed: { ...mapGetters([\"editPollList\"])\n  },\n\n  mounted() {\n    this.callMountRes();\n    this.callAddOptionRes();\n    this.callEditTitleRes();\n  },\n\n  methods: { ...mapActions(['callDeletePoll', \"callEditTitle\", 'callEditpoll', 'callAddOption', 'callDeleteOption']),\n\n    callMountRes() {\n      this.callEditpoll();\n    },\n\n    callAddOptionRes() {\n      this.callEditpoll();\n    },\n\n    callEditTitleRes() {\n      this.callEditpoll();\n    },\n\n    selectedRadio(item) {\n      this.deletePollOptionText = item;\n    },\n\n    async handleDeletePoll(item) {\n      const payLoad = {\n        id: item._id\n      };\n      const responseDelete = await this.callDeletePoll(payLoad.id);\n      this.callMountRes();\n    },\n\n    handleUpdateTitle(item) {\n      this.editPollTitle = item;\n      this.editPollTitleOk = item;\n      this.showEditTitleModal = true;\n    },\n\n    async handleEditTitleOk(editTitleText) {\n      const payLoad = {\n        title: editTitleText,\n        id: this.editPollTitle._id\n      };\n      const responseEditTitle = await this.callEditTitle(payLoad);\n      this.callMountRes();\n    },\n\n    deleteOption(item) {\n      this.deletePollOption = item;\n      console.log(this.deletePollOption);\n      this.showDeletePollModal = true;\n    },\n\n    async handleDeleteOptionOk() {\n      const payLoad = {\n        id: this.deletePollOption._id,\n        text: this.deletePollOptionText\n      };\n      console.log(payLoad);\n      const responsedelPollOptText = await this.callDeleteOption(payLoad);\n      this.callMountRes();\n    },\n\n    handleNewOption(item) {\n      this.objForNewOption = item;\n      this.showAddOptionModal = true;\n    },\n\n    async handleOk(text, editPollList) {\n      if (this.text != \"\") {\n        const payLoad = {\n          id: this.objForNewOption._id,\n          text: this.text\n        };\n        const responseAddOption = await this.callAddOption(payLoad);\n        this.callAddOptionRes();\n        this.text = \"\";\n      } else {\n        console.log(\"oop\");\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AAEA;EACAA,gBADA;;EAEAC;IACA;MACAC,YADA;MAEAC,0BAFA;MAGAC,yBAHA;MAIAC,yBAJA;MAKAC,iBALA;MAMAC,oBANA;MAOAC,QAPA;MAQAC,wBARA;MASAC,iBATA;MAUAC;IAVA;EAYA,CAfA;;EAgBAC,YACA,eACA,cADA;EADA,CAhBA;;EAqBAC;IACA;IACA;IACA;EACA,CAzBA;;EA0BAC,WACA,eACA,gBADA,EAEA,eAFA,EAGA,cAHA,EAIA,eAJA,EAKA,kBALA,EADA;;IAQAC;MACA;IACA,CAVA;;IAWAC;MACA;IACA,CAbA;;IAcAC;MACA;IACA,CAhBA;;IAiBAC;MACA;IACA,CAnBA;;IAoBA;MACA;QACAC;MADA;MAGA;MACA;IACA,CA1BA;;IA2BAC;MACA;MACA;MACA;IACA,CA/BA;;IAgCA;MACA;QACAC,oBADA;QAEAF;MAFA;MAIA;MACA;IACA,CAvCA;;IAwCAG;MACA;MACAC;MACA;IACA,CA5CA;;IA6CA;MACA;QACAJ,6BADA;QAEAX;MAFA;MAIAe;MACA;MACA;IACA,CArDA;;IAsDAC;MACA;MACA;IACA,CAzDA;;IA0DA;MACA;QACA;UACAL,4BADA;UAEAX;QAFA;QAIA;QACA;QACA;MACA,CARA,MAQA;QACAe;MACA;IACA;;EAtEA;AA1BA","names":["name","data","selected","showDeletePollModal","showAddOptionModal","showEditTitleModal","editPollTitle","deletePollOption","text","deletePollOptionText","editTitleText","objForNewOption","computed","mounted","methods","callMountRes","callAddOptionRes","callEditTitleRes","selectedRadio","id","handleUpdateTitle","title","deleteOption","console","handleNewOption"],"sourceRoot":"src/components","sources":["EditPoll.vue"],"sourcesContent":["<template>\n  <div class=\"editPoll\">\n    <b-modal\n      @ok=\"handleDeleteOptionOk\"\n      v-model=\"showDeletePollModal\"\n      title=\"Select option to remove from poll\"\n    >\n      <p>Title: {{ deletePollOption.title }} </p>\n      <li\n        id=\"no-style\"\n        v-for=\"(item, index) in deletePollOption.options\"\n        :key=\"index\"\n      >\n        <b-form-radio name=\"some-radios\" @change=\"selectedRadio(item.option)\" v-model=\"selected\" :value=\"item.option\">{{\n          item.option\n        }}</b-form-radio>\n      </li>\n    </b-modal>\n    <b-modal @ok=\"handleEditTitleOk(editTitleText, editPollList)\" v-model=\"showEditTitleModal\">\n      <p>{{ editPollTitle.title }}</p>\n      <input type=\"text\" v-model=\"editTitleText\">\n      {{ editTitleText }}\n      <!-- Another Option -->\n      <!-- <p>{{ editPollTitle ? editPollTitle.title : null}}</p> -->\n    </b-modal>\n    <b-modal\n      @ok=\"handleOk(text, editPollList)\"\n      v-model=\"showAddOptionModal\"\n      title=\"Type what you want to add as an option in Poll\"\n    >\n      <p class=\"my-4\">Option:</p>\n      <b-form-input v-model=\"text\" placeholder=\"Option for Poll\"></b-form-input>\n      {{ text }}\n    </b-modal>\n    <b-jumbotron header=\"Edit Poll\"></b-jumbotron>\n    <b-card class=\"card\">\n      <b-container class=\"container\">\n        <div\n          class=\"pollHolder\"\n          v-for=\"(item, index) in editPollList\"\n          :key=\"index\"\n        >\n          <div class=\"pollDetail\">\n            <p class=\"title\">Title: {{ item.title }}</p>\n            <p class=\"options\">Options in Poll</p>\n            <ol>\n              <li v-for=\"(item1, index) in item.options\" :key=\"index\">\n                {{ item1.option }}\n              </li>\n            </ol>\n          </div>\n          <div class=\"editPollButtons\">\n            <b-button variant=\"outline-primary\" @click=\"handleUpdateTitle(item)\"\n              >Edit Title</b-button\n            >\n            <b-button\n              variant=\"outline-primary\"\n              @click=\"handleNewOption(item)\"\n              v-b-modal.modal-1\n              >New Option\n            </b-button>\n\n            <b-button variant=\"outline-danger\" @click=\"deleteOption(item)\"\n              >Delete Option\n            </b-button>\n            <b-button\n              variant=\"outline-danger\"\n              @click=\"handleDeletePoll(item)\"\n              >Delete Poll</b-button\n            >\n          </div>\n        </div>\n      </b-container>\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport { mapActions } from 'vuex';\n\nexport default {\n  name: \"EditPoll\",\n  data() {\n    return {\n      selected: \"\",\n      showDeletePollModal: false,\n      showAddOptionModal: false,\n      showEditTitleModal: false,\n      editPollTitle: {},\n      deletePollOption: {},\n      text: \"\",\n      deletePollOptionText: \"\",\n      editTitleText: \"\",\n      objForNewOption: {},\n    };\n  },\n  computed: {\n    ...mapGetters([\n        \"editPollList\",\n    ]),\n  },\n  mounted(){\n    this.callMountRes();\n    this.callAddOptionRes();\n    this.callEditTitleRes();\n  },\n  methods: {\n    ...mapActions([\n            'callDeletePoll',\n            \"callEditTitle\",\n            'callEditpoll',\n            'callAddOption',\n            'callDeleteOption',\n        ]),\n    callMountRes(){\n        this.callEditpoll();\n    },\n    callAddOptionRes(){\n        this.callEditpoll();\n    },\n    callEditTitleRes(){\n      this.callEditpoll();\n    },\n    selectedRadio(item){\n      this.deletePollOptionText = item;\n    },\n    async handleDeletePoll(item){\n        const payLoad = {\n            id: item._id,\n        }\n        const responseDelete = await this.callDeletePoll(payLoad.id);\n        this.callMountRes();\n    },\n    handleUpdateTitle(item){\n        this.editPollTitle = item;\n        this.editPollTitleOk = item;\n        this.showEditTitleModal = true;\n    },\n    async handleEditTitleOk(editTitleText) {\n        const payLoad = {\n          title: editTitleText,\n          id: this.editPollTitle._id,\n        }\n        const responseEditTitle = await this.callEditTitle(payLoad);\n        this.callMountRes();\n    },\n    deleteOption(item) {\n      this.deletePollOption = item;\n      console.log(this.deletePollOption)\n      this.showDeletePollModal = true;\n    },\n    async handleDeleteOptionOk() {\n      const payLoad = {\n        id : this.deletePollOption._id,\n        text : this.deletePollOptionText,\n      }\n      console.log(payLoad)\n      const responsedelPollOptText = await this.callDeleteOption(payLoad);\n      this.callMountRes();\n    },\n    handleNewOption(item) {\n        this.objForNewOption = item;\n        this.showAddOptionModal = true;\n    },\n    async handleOk(text, editPollList){\n        if(this.text != \"\") {\n            const payLoad = {\n                id: this.objForNewOption._id,\n                text: this.text,\n            }\n            const responseAddOption = await this.callAddOption(payLoad);\n            this.callAddOptionRes();\n            this.text = \"\";\n        } else {\n            console.log(\"oop\");\n        }\n    }\n  },\n};\n</script>\n\n<style scoped>\n.pollDetail {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n}\n\n.editPollButtons {\n  display: flex;\n  justify-content: end;\n  column-gap: 10px;\n}\n\nli {\n  text-align: start;\n}\n\n.pollHolder {\n  border: 1px solid black;\n  box-sizing: border-box;\n  box-shadow: 5px 5px 2px rgba(129, 236, 236, 0.4);\n  margin-bottom: 35px;\n  padding: 10px;\n}\n\n.container {\n  box-sizing: border-box !important;\n}\n\n.card {\n  width: 100%;\n  box-sizing: border-box;\n  padding-top: 5px;\n  display: flex;\n  align-items: center;\n}\n\n#no-style {\n  list-style-type: none;\n}\n</style>"]},"metadata":{},"sourceType":"module"}